How did viewing a diff between two versions of a file help you see the bug that
was introduced?

	Since the old version is guarentee to work, the bug must be introduced 
	during the change. It means we only have to look into those changed lines. 
	Tool like "diff" make it easy to highlight those changed lines and as a 
	result we can easily find the new introduced bug.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Sometimes, we want to check out the code from certain snapshot. With a
    entire history of a file, we can do that.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    pros: we only save what we think is important. So that what we save is 
    minimum. 

    cons: however, what we think is important can miss something really
    important. With Git, we will not get these really important version.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git is more for coding, where multiple files can be changed simultaneously.

How can you use the commands git log and git diff to view the history of files?

    use git log to know the stored repositories and use git diff to see what 
    is added and removed.

How might using version control make you more confident to make changes that
could break something?

    because we can roll back if things broke.

Now that you have your workspace set up, what do you want to try using Git for?

    experience the convenience brought by colors.